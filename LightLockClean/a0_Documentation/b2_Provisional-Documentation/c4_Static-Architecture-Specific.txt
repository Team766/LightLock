Static Architecture Specific
    Lists explicitly what the static architecture is
    
    
0. Preselection #Not part of code, but must be done
    1. Chose and generate images that work for testing data
    2. Upload images  
    3. Upload field profile
1. Aquire Data
    1. Determine what image file should be used
        1. Name >> 01;/02!/01^/01, Determine File.py >> Done
        2. Location >> 01;/02!/01^/01, Determine File.py >> Done
    2. Determine that image file exists >> Done
    3. Import image file >> 01;/02!/01^/01, Determine File.py >> Done
        1. As Grayscale, from beginning >> Done
    4. Take last known location >> Pull Directly from 
2. Pre-Process Data
    1. Remove non-white colors from image
    2. Cut all data outside field dimensions from image
    3. Flatten Image while preserving angular data
3. Extract Information from Data
    1. Find center of each circle or bar generated by the lights
    2. Use last known location and angle of centers to match Information with Field Profile
4. Determine Location from Information
5. Send Location to relevant system

Required Implications:
    Field Static Information Class >> 01; Program Files\02! Static Implementation\00^ Preselection\02, Field Information Class.py
    Robot Position Class >> 01; Program Files\02! Static Implementation\00^ Preselection\01,Robot Position Class.py >> Done
    Light Position Class
    Light Class
        Specifies type, and a few other things